// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: fengsheng.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protos {

  /// <summary>Holder for reflection information generated from fengsheng.proto</summary>
  public static partial class FengshengReflection {

    #region Descriptor
    /// <summary>File descriptor for fengsheng.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FengshengReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9mZW5nc2hlbmcucHJvdG8SBnByb3RvcyJVCgpjYXJkX3BhcmFtEicKBnBh",
            "cmFtMRgBIAEoDjIXLnByb3Rvcy5mZW5nc2hlbmdfY29sb3ISHgoGcGFyYW0y",
            "GAIgAygOMg4ucHJvdG9zLmFjdGlvbiLKAQoOZmVuZ3NoZW5nX2NhcmQSDwoH",
            "Y2FyZF9pZBgBIAEoDRIfCgRuYW1lGAIgASgOMhEucHJvdG9zLmNhcmRfbmFt",
            "ZRIrCg9jYXJkX3BhcmFtX2xpc3QYAyADKAsyEi5wcm90b3MuY2FyZF9wYXJh",
            "bRImCgVjb2xvchgEIAEoDjIXLnByb3Rvcy5mZW5nc2hlbmdfY29sb3ISMQoN",
            "dHJhbnNtaXRfdHlwZRgFIAEoDjIaLnByb3Rvcy5jYXJkX3RyYW5zbWl0X3R5",
            "cGUq2QEKCWNhcmRfbmFtZRIMCghaSFVBTl9ZSRAAEgwKCFNVT19ESU5HEAES",
            "CgoGU0hJX1BPEAISCwoHSklFX0hVTxADEhMKD0RJQU9fSFVfTElfU0hBThAE",
            "EhUKEVdFSV9YSUFOX1FJTkdfQkFPEAUSFAoQR09OR19LQUlfV0VOX0JFThAG",
            "Eg0KCVpFTkdfWVVBThAHEgwKCFNIQU9fSFVJEAgSCQoFUE9fWUkQCRIMCghE",
            "SUFPX0JBTxAKEgsKB0xJX0pJQU4QCxISCg5KSV9NSV9XRU5fSklBThAMKjgK",
            "D2ZlbmdzaGVuZ19jb2xvchISCg5CTEFDS19PUl9HUkVBThAAEgcKA1JFRBAB",
            "EggKBEJMVUUQAio3ChJjYXJkX3RyYW5zbWl0X3R5cGUSCAoEVEVYVBAAEgoK",
            "BlNFQ1JFVBABEgsKB05PTlNUT1AQAiqqAQoGYWN0aW9uEg0KCURJU0NBUkRf",
            "MRAAEgoKBkRSQVdfMRABEgoKBkRSQVdfMhACEhMKD0JFX1RBS0VOX0FXQVlf",
            "MRADEgwKCElfQU1fU1BZEAQSEQoNSV9BTV9HT09EX01BThAFEhMKD0lfQU1f",
            "VU5ERVJDT1ZFUhAGEhIKDkxJU1RFTl9UT19XSU5EEAcSDgoKV0FUQ0hfUkFJ",
            "ThAIEgoKBlNVTlNFVBAJQhBaDnByb3Rvcy87cHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Protos.card_name), typeof(global::Protos.fengsheng_color), typeof(global::Protos.card_transmit_type), typeof(global::Protos.action), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.card_param), global::Protos.card_param.Parser, new[]{ "Param1", "Param2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.fengsheng_card), global::Protos.fengsheng_card.Parser, new[]{ "CardId", "Name", "CardParamList", "Color", "TransmitType" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum card_name {
    [pbr::OriginalName("ZHUAN_YI")] ZhuanYi = 0,
    [pbr::OriginalName("SUO_DING")] SuoDing = 1,
    [pbr::OriginalName("SHI_PO")] ShiPo = 2,
    [pbr::OriginalName("JIE_HUO")] JieHuo = 3,
    [pbr::OriginalName("DIAO_HU_LI_SHAN")] DiaoHuLiShan = 4,
    [pbr::OriginalName("WEI_XIAN_QING_BAO")] WeiXianQingBao = 5,
    [pbr::OriginalName("GONG_KAI_WEN_BEN")] GongKaiWenBen = 6,
    [pbr::OriginalName("ZENG_YUAN")] ZengYuan = 7,
    [pbr::OriginalName("SHAO_HUI")] ShaoHui = 8,
    [pbr::OriginalName("PO_YI")] PoYi = 9,
    [pbr::OriginalName("DIAO_BAO")] DiaoBao = 10,
    [pbr::OriginalName("LI_JIAN")] LiJian = 11,
    [pbr::OriginalName("JI_MI_WEN_JIAN")] JiMiWenJian = 12,
  }

  public enum fengsheng_color {
    [pbr::OriginalName("BLACK_OR_GREAN")] BlackOrGrean = 0,
    [pbr::OriginalName("RED")] Red = 1,
    [pbr::OriginalName("BLUE")] Blue = 2,
  }

  public enum card_transmit_type {
    [pbr::OriginalName("TEXT")] Text = 0,
    [pbr::OriginalName("SECRET")] Secret = 1,
    [pbr::OriginalName("NONSTOP")] Nonstop = 2,
  }

  public enum action {
    [pbr::OriginalName("DISCARD_1")] Discard1 = 0,
    [pbr::OriginalName("DRAW_1")] Draw1 = 1,
    [pbr::OriginalName("DRAW_2")] Draw2 = 2,
    [pbr::OriginalName("BE_TAKEN_AWAY_1")] BeTakenAway1 = 3,
    [pbr::OriginalName("I_AM_SPY")] IAmSpy = 4,
    [pbr::OriginalName("I_AM_GOOD_MAN")] IAmGoodMan = 5,
    [pbr::OriginalName("I_AM_UNDERCOVER")] IAmUndercover = 6,
    /// <summary>
    /// 秘密下达-听风
    /// </summary>
    [pbr::OriginalName("LISTEN_TO_WIND")] ListenToWind = 7,
    /// <summary>
    /// 秘密下达-看雨
    /// </summary>
    [pbr::OriginalName("WATCH_RAIN")] WatchRain = 8,
    /// <summary>
    /// 秘密下达-日落
    /// </summary>
    [pbr::OriginalName("SUNSET")] Sunset = 9,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 用于试探、公开文本、秘密下达
  /// </summary>
  public sealed partial class card_param : pb::IMessage<card_param> {
    private static readonly pb::MessageParser<card_param> _parser = new pb::MessageParser<card_param>(() => new card_param());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<card_param> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.FengshengReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public card_param() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public card_param(card_param other) : this() {
      param1_ = other.param1_;
      param2_ = other.param2_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public card_param Clone() {
      return new card_param(this);
    }

    /// <summary>Field number for the "param1" field.</summary>
    public const int Param1FieldNumber = 1;
    private global::Protos.fengsheng_color param1_ = global::Protos.fengsheng_color.BlackOrGrean;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.fengsheng_color Param1 {
      get { return param1_; }
      set {
        param1_ = value;
      }
    }

    /// <summary>Field number for the "param2" field.</summary>
    public const int Param2FieldNumber = 2;
    private static readonly pb::FieldCodec<global::Protos.action> _repeated_param2_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Protos.action) x);
    private readonly pbc::RepeatedField<global::Protos.action> param2_ = new pbc::RepeatedField<global::Protos.action>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protos.action> Param2 {
      get { return param2_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as card_param);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(card_param other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Param1 != other.Param1) return false;
      if(!param2_.Equals(other.param2_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Param1 != global::Protos.fengsheng_color.BlackOrGrean) hash ^= Param1.GetHashCode();
      hash ^= param2_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Param1 != global::Protos.fengsheng_color.BlackOrGrean) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Param1);
      }
      param2_.WriteTo(output, _repeated_param2_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Param1 != global::Protos.fengsheng_color.BlackOrGrean) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Param1);
      }
      size += param2_.CalculateSize(_repeated_param2_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(card_param other) {
      if (other == null) {
        return;
      }
      if (other.Param1 != global::Protos.fengsheng_color.BlackOrGrean) {
        Param1 = other.Param1;
      }
      param2_.Add(other.param2_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Param1 = (global::Protos.fengsheng_color) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            param2_.AddEntriesFrom(input, _repeated_param2_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 卡牌的结构体
  /// </summary>
  public sealed partial class fengsheng_card : pb::IMessage<fengsheng_card> {
    private static readonly pb::MessageParser<fengsheng_card> _parser = new pb::MessageParser<fengsheng_card>(() => new fengsheng_card());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<fengsheng_card> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.FengshengReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public fengsheng_card() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public fengsheng_card(fengsheng_card other) : this() {
      cardId_ = other.cardId_;
      name_ = other.name_;
      cardParamList_ = other.cardParamList_.Clone();
      color_ = other.color_;
      transmitType_ = other.transmitType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public fengsheng_card Clone() {
      return new fengsheng_card(this);
    }

    /// <summary>Field number for the "card_id" field.</summary>
    public const int CardIdFieldNumber = 1;
    private uint cardId_;
    /// <summary>
    /// 卡牌ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private global::Protos.card_name name_ = global::Protos.card_name.ZhuanYi;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.card_name Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "card_param_list" field.</summary>
    public const int CardParamListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Protos.card_param> _repeated_cardParamList_codec
        = pb::FieldCodec.ForMessage(26, global::Protos.card_param.Parser);
    private readonly pbc::RepeatedField<global::Protos.card_param> cardParamList_ = new pbc::RepeatedField<global::Protos.card_param>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protos.card_param> CardParamList {
      get { return cardParamList_; }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 4;
    private global::Protos.fengsheng_color color_ = global::Protos.fengsheng_color.BlackOrGrean;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.fengsheng_color Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "transmit_type" field.</summary>
    public const int TransmitTypeFieldNumber = 5;
    private global::Protos.card_transmit_type transmitType_ = global::Protos.card_transmit_type.Text;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.card_transmit_type TransmitType {
      get { return transmitType_; }
      set {
        transmitType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as fengsheng_card);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(fengsheng_card other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardId != other.CardId) return false;
      if (Name != other.Name) return false;
      if(!cardParamList_.Equals(other.cardParamList_)) return false;
      if (Color != other.Color) return false;
      if (TransmitType != other.TransmitType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (Name != global::Protos.card_name.ZhuanYi) hash ^= Name.GetHashCode();
      hash ^= cardParamList_.GetHashCode();
      if (Color != global::Protos.fengsheng_color.BlackOrGrean) hash ^= Color.GetHashCode();
      if (TransmitType != global::Protos.card_transmit_type.Text) hash ^= TransmitType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CardId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CardId);
      }
      if (Name != global::Protos.card_name.ZhuanYi) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Name);
      }
      cardParamList_.WriteTo(output, _repeated_cardParamList_codec);
      if (Color != global::Protos.fengsheng_color.BlackOrGrean) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Color);
      }
      if (TransmitType != global::Protos.card_transmit_type.Text) {
        output.WriteRawTag(40);
        output.WriteEnum((int) TransmitType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CardId);
      }
      if (Name != global::Protos.card_name.ZhuanYi) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Name);
      }
      size += cardParamList_.CalculateSize(_repeated_cardParamList_codec);
      if (Color != global::Protos.fengsheng_color.BlackOrGrean) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Color);
      }
      if (TransmitType != global::Protos.card_transmit_type.Text) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TransmitType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(fengsheng_card other) {
      if (other == null) {
        return;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.Name != global::Protos.card_name.ZhuanYi) {
        Name = other.Name;
      }
      cardParamList_.Add(other.cardParamList_);
      if (other.Color != global::Protos.fengsheng_color.BlackOrGrean) {
        Color = other.Color;
      }
      if (other.TransmitType != global::Protos.card_transmit_type.Text) {
        TransmitType = other.TransmitType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CardId = input.ReadUInt32();
            break;
          }
          case 16: {
            Name = (global::Protos.card_name) input.ReadEnum();
            break;
          }
          case 26: {
            cardParamList_.AddEntriesFrom(input, _repeated_cardParamList_codec);
            break;
          }
          case 32: {
            Color = (global::Protos.fengsheng_color) input.ReadEnum();
            break;
          }
          case 40: {
            TransmitType = (global::Protos.card_transmit_type) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
